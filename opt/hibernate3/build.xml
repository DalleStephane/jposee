<project name="jPOS-EE-hibernate3" basedir="../.." default="config">
 <property file="build.properties"/>
 <property name="module.name" value="hibernate3" />
 <property name="module.lib.dir" value="${modules.dir}/${module.name}/lib"/>
 <property name="module.cfg.dir" value="${modules.dir}/${module.name}/cfg"/>
 <property name="classes.dir" value="${build.dir}/classes"/>
 <property name="test-classes.dir" value="${build.dir}/test-classes"/>

 <target name="prepare" />
 <target name="config">
  <echo message="hibernate3: generating ${build.cfg}/hibernate.cfg.xml" />
  <condition property="dependenciesOk">
     <or>
      <available file="build/modules/hibernate3_mysql/cfg/_hibernate.cfg.properties" />
      <available file="build/modules/hibernate3_oracle/cfg/_hibernate.cfg.properties" />
      <available file="build/modules/hibernate3_postgresql/cfg/_hibernate.cfg.properties" />
    </or>
  </condition>
  <fail unless="dependenciesOk">Missing a suitable Hibernate setup for a specific database.  You have to include one hibernate_xxx module, such as hibernate_mysql. </fail>
  <copy 
   file="${module.cfg.dir}/_hibernate.cfg.head" 
   tofile="${build.cfg}/hibernate.cfg.tmp" overwrite="true" />
  <filter filtersfile="${target}.properties" />
  <concat destfile="${build.cfg}/hibernate.cfg.tmp" append="true" force="true">
   <path>
     <fileset dir="${modules.dir}" excludesfile="${modules.ignore.list}">
      <include name="**/cfg/_hibernate.cfg.properties"/>
     </fileset>
   </path>
  </concat>
  <concat destfile="${build.cfg}/hibernate.cfg.tmp" append="true" force="true">
   <path>
     <fileset dir="${modules.dir}" excludesfile="${modules.ignore.list}">
      <include name="**/cfg/_hibernate.cfg.mappings"/>
     </fileset>
   </path>
  </concat>
  <concat destfile="${build.cfg}/hibernate.cfg.tmp" append="true" force="true">
   <path>
     <fileset dir="${module.cfg.dir}">
      <include name="_hibernate.cfg.tail"/>
     </fileset>
   </path>
  </concat>
  <copy 
   file="${build.cfg}/hibernate.cfg.tmp" 
   filtering="true"
   tofile="${classes.dir}/hibernate.cfg.xml" overwrite="true" />
  <delete file="${build.cfg}/hibernate.cfg.tmp" />
  <!--
  <copy 
   file="${build.cfg}/ehcache.xml" 
   filtering="true"
   tofile="${classes.dir}/ehcache.xml" overwrite="true" />
   -->
  <copy file="${build.dir}/cfg/connection.xml" 
      tofile="${test-classes.dir}/cfg/connection.xml" />
 </target>
</project>

